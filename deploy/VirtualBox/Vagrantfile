# Create all the machines and docker containers needed to run the SafeHarbor server.
# This includes the Cesanta authorization server.
# Note: This vagrantfile depends on the env variables defined in safeharbor.conf

# Standard settings - these should not need to change.
@CesantaServerName = "docker_auth"
@SafeHarborDir = "/home/vagrant/safeharbor"
@SafeHarborServerName = "SafeHarbor"
@SafeHarborExecutable = "SafeHarborServer"

# Variables set by the environment.
@vmboxname = ENV['vmboxname']
@vmboxurl = ENV['vmboxurl']
@CesantaPort = ENV['CesantaPort']
@CesantaConfDir = ENV['CesantaConfDir']
@CesantaSSLDir = ENV['CesantaSSLDir']
@CesantaDockerImage = ENV['CesantaDockerImage']
@SafeHarborPort = ENV['SafeHarborPort']
@SafeHarborConfPath = ENV['SafeHarborConfPath']
@SafeHarborDockerImage = ENV['SafeHarborDockerImage']
@SafeHarborPackageName = ENV['SafeHarborPackageName']

# Derived - do not change.
@LocalPrivateKeyPath = "#{@CesantaServerName}.key"
@LocalPemPath = "#{@CesantaServerName}.pem"
@LocalCertPath = "#{@CesantaServerName}.crt"

Vagrant.configure(2) do |config|

	# Configure the OS.
	config.vm.box = "centos/7"
	#config.vm.box = @vmboxname
	#config.vm.box_url = @vmboxurl
	config.vm.hostname = "SafeHarborServer"
	config.vm.network "private_network", ip: "192.168.100.10", virtualbox__intnet: "safeharbor"
	config.vm.network "forwarded_port", guest: @CesantaPort, host: @CesantaPort
	config.vm.network "forwarded_port", guest: @SafeHarborPort, host: @SafeHarborPort
	
	# Create directories needed for installing Cesanta.
	config.vm.provision "shell", inline: <<-SHELL
		if ! [ -d #{@CesantaConfDir} ]; then mkdir -p #{@CesantaConfDir}; fi
		if ! [ -d #{@CesantaSSLDir} ]; then mkdir -p #{@CesantaSSLDir}; fi
		sudo chown vagrant:vagrant #{@CesantaConfDir}
		sudo chown vagrant:vagrant #{@CesantaSSLDir}
	SHELL

	# Copy the Cesanta configuration file and credentials to the VM.
	config.vm.provision "file", source: "auth_config.yml", destination: "#{@CesantaConfDir}/auth_config.yml"
	config.vm.provision "file", source: @LocalPrivateKeyPath, destination: "#{@CesantaSSLDir}/#{@CesantaServerName}.key"
	#config.vm.provision "file", source: @LocalPemPath, destination: "#{@CesantaSSLDir}/#{@CesantaServerName}.pem"
	
	# Create directories needed for installing SafeHarbor.
	config.vm.provision "shell", inline: <<-SHELL
		if ! [ -d #{@SafeHarborDir} ]; then mkdir -p #{@SafeHarborDir}; fi
		sudo chown vagrant:vagrant #{@SafeHarborDir}
	SHELL
	
	# Obtain the SafeHarbor installation package.
	config.vm.provision "file", source: @SafeHarborPackageName, destination: @SafeHarborDir
	
	# Prepare a directory from which SafeHarborServer can be run. This directory
	# will be mapped to the docker containers.
	config.vm.provision "shell", inline: <<-SHELL
		sudo yum install -y unzip
		cd safeharbor; unzip -o -q safeharbor
		cp /vagrant/*.json /home/vagrant/safeharbor
		cp /vagrant/*.key /home/vagrant/safeharbor
		cp /vagrant/*.crt /home/vagrant/safeharbor
		cp /vagrant/*.yml /home/vagrant/safeharbor
		mkdir /home/vagrant/safeharbor/Repositories
		sudo chown vagrant:vagrant /home/vagrant/safeharbor/*
		sudo chown vagrant:vagrant /home/vagrant/safeharbor/Repositories
	SHELL

	# Install patch needed by RHEL7/Centos7 to make the vagrant docker provisioner work.
	config.vm.provision "shell", inline: <<-SHELL
		#yum-config-manager --enable ol7_addons
		groupadd docker
		usermod -a -G docker vagrant
	SHELL

	# Install docker and run the images for Cesanta and SafeHarbor.
	config.vm.provision "docker" do |d|
		
		# Obtain the Cesanta docker image
		d.pull_images @CesantaDockerImage
		
		# Install the SafeHarborServer.
		d.pull_images @SafeHarborDockerImage
	end
	
	# Install Lynis
	config.vm.provision "shell", inline: <<-SHELL
		cd /usr/local; git clone https://github.com/CISOfy/lynis
	SHELL

end







# Build the box in which SafeHarborServer is compiled for Centos.
# This box is not part of the deployment.

@shboxname = "bento/centos-7.1"  # contains guest additions
@clairboxname = "bento/centos-7.1"  # contains guest additions

Vagrant.configure(2) do |config|

	config.vm.define "safeharbor" do |safeharbor|
		safeharbor.vm.box = @shboxname
		
		# Configure the OS.
		config.vm.hostname = "SafeHarborCentosBuildBox"
	end
	
	config.vm.define "clair" do |clair|
		clair.vm.box = @clairboxname
		
		# Configure the OS.
		config.vm.hostname = "SafeHarborClairBox"
		clair.vm.provider "virtualbox" do |vb|
			# vb.gui = true
			vb.memory = "2048"
		end
	end
	
	

	# config.vm.network "forwarded_port", guest: 80, host: 8080
	# config.vm.network "private_network", ip: "192.168.33.10"
	# config.vm.network "public_network"
	# config.vm.synced_folder "../data", "/vagrant_data"
	
	# Install the go tools.
	config.vm.provision "shell", inline: <<-SHELL
		sudo yum install -y golang
		sudo yum install -y git
	SHELL
	
	# Obtain the source code that is to be compiled.
	config.vm.provision "shell", inline: <<-SHELL
		rm -rf SafeHarborServer
		git clone -q https://cliffbdf:flubber2@github.com/Scaled-Markets/SafeHarborServer.git
	SHELL
	
	# Compile the source code.
	config.vm.provision "shell", inline: <<-SHELL
		cd SafeHarborServer; GOPATH=. make compile
	SHELL
	
	# Package the compiled code.
	config.vm.provision "shell", inline: <<-SHELL
		# For now, just zip the files.
		mkdir package
		mv bin/SafeHarborServer package
		cp SafeHarborServer/*.example package
		cp SafeHarborServer/certs.mk package
		cp SafeHarborServer/scaledmarkets.crt package
		sudo yum install -y zip
		cd package; zip safeharborserver *
		mv safeharborserver.zip /vagrant
	SHELL

end
